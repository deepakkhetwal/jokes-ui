{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@angular/router/router.d.ts.ÉµEmptyOutletComponent.html","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.server.module.ts","webpack:///./src/app/contact-us/contact-data.service.ts","webpack:///./src/app/contact-us/contact.component.html","webpack:///./src/app/contact-us/contact.component.ts","webpack:///./src/app/contact-us/contact.module.ts","webpack:///./src/app/jokes/jokes-list-data.service.ts","webpack:///./src/app/jokes/jokes-list.component.html","webpack:///./src/app/jokes/jokes-list.component.ts","webpack:///./src/app/jokes/jokes-list.module.ts","webpack:///./src/app/post-joke/post-joke-data.service.ts","webpack:///./src/app/post-joke/post-joke.component.html","webpack:///./src/app/post-joke/post-joke.component.ts","webpack:///./src/app/post-joke/post-joke.model.ts","webpack:///./src/app/post-joke/post-joke.module.ts","webpack:///./src/app/subscription/subscription-data.service.ts","webpack:///./src/app/subscription/subscription.component.html","webpack:///./src/app/subscription/subscription.component.ts","webpack:///./src/app/subscription/subscription.model.ts","webpack:///./src/app/subscription/subscription.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.server.ts","webpack:///external \"@angular/animations\"","webpack:///external \"@angular/animations/browser\"","webpack:///external \"@angular/common\"","webpack:///external \"@angular/common/http\"","webpack:///external \"@angular/core\"","webpack:///external \"@angular/forms\"","webpack:///external \"@angular/http\"","webpack:///external \"@angular/platform-browser\"","webpack:///external \"@angular/platform-browser/animations\"","webpack:///external \"@angular/platform-server\"","webpack:///external \"@angular/router\"","webpack:///external \"@nguniversal/common\"","webpack:///external \"@nguniversal/module-map-ngfactory-loader\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","<router-outlet></router-outlet>","<ul class=\"nav\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" routerLink=\"/jokes\">KidsLaughs.com Home</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" routerLink=\"/post-joke\">Post a Joke</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" routerLink=\"/subscribe\">Subscribe</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" routerLink=\"/get-contact\">About us</a>\n  </li>\n\n</ul>\n\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { Meta, Title } from '@angular/platform-browser';\n\n\n@Component({\n  selector: 'main-app',\n  templateUrl: './app.component.html'\n\n})\nexport class AppComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport {JokesListModule} from './jokes/jokes-list.module';\nimport {JokesListComponent} from './jokes/jokes-list.component';\nimport {PostJokeComponent} from './post-joke/post-joke.component';\nimport {PostJokeModule} from './post-joke/post-joke.module';\nimport {ContactModule} from './contact-us/contact.module';\nimport {ContactComponent} from './contact-us/contact.component';\nimport {SubscriptionModule} from './subscription/subscription.module';\nimport {SubscriptionComponent} from './subscription/subscription.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {TransferHttpCacheModule} from '@nguniversal/common'\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    JokesListModule,\n    PostJokeModule,\n    ContactModule,\n    SubscriptionModule,\n    BrowserModule.withServerTransition({\n          appId: 'my-app-id'\n    }),\n    TransferHttpCacheModule,\n    RouterModule.forRoot([\n      { path: '', component: JokesListComponent, pathMatch: 'full'},\n      {path: 'jokes', component: JokesListComponent},\n      {path: 'post-joke', component: PostJokeComponent},\n      {path: 'get-contact', component: ContactComponent},\n      {path: 'subscribe', component: SubscriptionComponent}\n    ])\n  ],\n  declarations: [ AppComponent],\n  exports: [ AppComponent ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import {NgModule} from '@angular/core';\nimport {ServerModule, ServerTransferStateModule} from '@angular/platform-server';\nimport {ModuleMapLoaderModule} from '@nguniversal/module-map-ngfactory-loader';\n\nimport {AppModule} from './app.module';\nimport {AppComponent} from './app.component';\n\n\n@NgModule({\n  imports: [\n    // The AppServerModule should import your AppModule followed\n    // by the ServerModule from @angular/platform-server.\n    AppModule,\n    ServerModule,\n    ServerTransferStateModule,\n    ModuleMapLoaderModule,\n  ],\n  // Since the bootstrapped component is not inherited from your\n  // imported AppModule, it needs to be repeated here.\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule {}\n","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport {Injectable} from '@angular/core';\n\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\n\n@Injectable()\nexport class ContactDataService{\n    constructor(private http: HttpClient){}\n    getContact() {\n        let url = environment.kidsLaughsApi + '/get-contact'; //'http://localhost:3001';\n        return this.http\n            .get(url);\n    }\n\n}","<div class=\"card\">\n  <div class=\"card-body\">\n    <h4 class=\"card-title\">About US</h4>\n    <p class=\"card-text\">\n          Email Id: {{contact.email}}\n    </p>\n\n  </div>\n</div>\n\n\n\n","\nimport {ContactDataService} from './contact-data.service';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n    selector: 'contact',\n    templateUrl: './contact.component.html',\n    providers: [ContactDataService]\n})\n\nexport class ContactComponent implements OnInit{\n    contact: any;\n\n    constructor(\n        private contactDataService: ContactDataService\n    ){}\n    ngOnInit(): void{\n        this.contactDataService.getContact()\n            .subscribe(p => {\n                this.contact = p[0];\n\n            });\n    }\n\n}","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport {NgModule} from '@angular/core';\n\nimport {ContactComponent} from './contact.component';\nimport {ContactDataService} from './contact-data.service';\n\n@NgModule({\n    imports:[],\n    declarations: [\n        ContactComponent\n    ],\n    providers: [ContactDataService]\n})\nexport class ContactModule{}","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport {Injectable} from '@angular/core';\n\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\n\n@Injectable()\nexport class JokesListDataService{\n    constructor(private http: HttpClient){}\n    getJokesList() {\n        let url = environment.kidsLaughsApi; //'http://localhost:3001';\n        return this.http\n            .get(url);\n    }\n    postLike(body){\n        let url = environment.kidsLaughsApi + '/inc-likes-cnt';\n        return this.http\n            .post(url, body);\n    }\n}\n"," <ul class=\"list-group\" *ngFor=\"let joke of jokes; let i=index\">\n   <li class=\"list-group-item\">\n     {{joke.description}}\n         <br>\n         <button *ngIf=\"liked[i]===false\" type=\"button\" class=\"btn btn-light\" aria-label=\"Left Align\" (click)=\"onPostLike(i)\">\n         <i class=\"fa fa-bell-o fa-lg\"   aria-hidden=\"true\"></i> Like\n         </button>\n       <button *ngIf=\"liked[i]===true\" type=\"button\" class=\"btn btn-light\" aria-label=\"Left Align\">\n         <i class=\"fa fa-bell fa-lg\"   aria-hidden=\"true\"></i> Like\n       </button>\n     {{joke.likes_count}} Likes\n   </li>\n </ul>\n\n\n\n","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport { Component, OnInit } from '@angular/core';\nimport {JokesListDataService} from './jokes-list-data.service';\n\n\n@Component({\n    selector: 'jokes-list',\n    templateUrl: './jokes-list.component.html',\n    providers: [JokesListDataService]\n})\n\nexport class JokesListComponent implements OnInit{\n    jokes: any;\n    liked: Boolean[] = [];\n    constructor(\n        private jokesListDataService: JokesListDataService\n    ){}\n    ngOnInit(): void{\n        this.jokesListDataService.getJokesList()\n            .subscribe(p => {\n                this.jokes = p;\n                for(let i=0; i< this.jokes.length; i++){\n                    this.liked[i] = false;\n                }\n            });\n    }\n    onPostLike(index){\n        this.jokes[index].likes_count = this.jokes[index].likes_count +1;\n        this.liked[index] = true;\n        const _id = this.jokes[index]._id;\n        this.jokesListDataService.postLike({_id: _id})\n            .subscribe();\n    }\n}\n","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {JokesListComponent} from './jokes-list.component';\nimport {JokesListDataService} from './jokes-list-data.service';\n\n@NgModule({\n    imports:[CommonModule],\n    declarations: [\n        JokesListComponent\n    ],\n    providers: [JokesListDataService]\n})\nexport class JokesListModule{}","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\n\n@Injectable()\nexport class PostJokeDataService{\n    constructor(private http: HttpClient){}\n    postJoke(body) {\n        let url = environment.kidsLaughsApi + '/post-joke'; //'http://localhost:3001';\n        return this.http\n            .post(url, body);\n    }\n}\n","<div class=\"card\">\n  <div class=\"card-header\">\n    Please post a Joke here for kids\n  </div>\n  <div class=\"row\">&nbsp;</div>\n  <div class=\"row\">\n    <div class=\"col-md-2\"></div>\n    <div class=\"col-md-8\">\n      <form  #postJokeForm=\"ngForm\">\n        <div class=\"form-group\">\n          <label for=\"emailId\">Email address</label>\n          <input type=\"email\" class=\"form-control\" id=\"emailId\" #emailId=\"ngModel\"  [(ngModel)]=\"model.user_email\" name=\"emailId\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" required>\n          <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n          <div *ngIf=\"emailId.invalid && (emailId.dirty || emailId.touched)\"\n               class=\"alert alert-danger\">\n            Email is required\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"description\">Enter a Joke</label>\n          <textarea rows=\"10\" cols=\"5\" class=\"form-control\" id=\"description\" #description=\"ngModel\" [(ngModel)]=\"model.description\" name=\"description\" required></textarea>\n          <div *ngIf=\"description.invalid && (description.dirty || description.touched)\"\n               class=\"alert alert-danger\">\n            Joke text is required\n          </div>\n        </div>\n        <div *ngIf=\"postSuccess === true\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n          Thank you for posting your Joke.\n          <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div *ngIf=\"postSuccess=== false\" class=\"alert alert-error alert-dismissible fade show\" role=\"alert\">\n          Oops some error occurred. please try again!.\n          <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"form-group\">\n          Please note: Your joke will be posted after being reviewed\n        </div>\n        <button (click)=\"onPostJoke()\" type=\"button\" [disabled]='postJokeForm.invalid && submitted=== false' class=\"btn btn-primary\">Submit</button>\n      </form>\n    </div>\n  </div>\n  <div class=\"row\">&nbsp;</div>\n</div>\n","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport { Component } from '@angular/core';\nimport {PostJokeDataService} from './post-joke-data.service';\nimport {PostJoke} from './post-joke.model';\nimport {isNullOrUndefined} from 'util';\n\n@Component({\n    selector: 'post-joke',\n    templateUrl: './post-joke.component.html',\n    providers: [PostJokeDataService]\n})\n\nexport class PostJokeComponent {\n    jokes: any;\n    model = new PostJoke('','');\n    submitted: any = undefined;\n    postSuccess: any = undefined;\n    constructor(\n        private postJokeDataService: PostJokeDataService\n    ){}\n\n    onPostJoke(){\n        this.submitted = false;\n        this.postJokeDataService.postJoke(this.model)\n            .subscribe((p : any) => {\n                this.submitted= true\n                if(p.success){\n                    this.postSuccess = true;\n                }else{\n                    this.postSuccess = false;\n                }\n            });\n    }\n}\n","export class PostJoke {\n    description: string;\n    user_email: string;\n    constructor(\n        description: string,\n        user_email: string\n    ){\n        this.description = description;\n        this.user_email = user_email;\n    }\n}","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport {NgModule} from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {PostJokeComponent} from './post-joke.component';\nimport {PostJokeDataService} from './post-joke-data.service';\n\n@NgModule({\n    imports:[FormsModule, CommonModule],\n    declarations: [\n        PostJokeComponent\n    ],\n    providers: [PostJokeDataService]\n})\nexport class PostJokeModule{}","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\n\n@Injectable()\nexport class SubscriptionDataService{\n    constructor(private http: HttpClient){}\n    postSubscription(body) {\n        let url = environment.kidsLaughsApi + '/post-subscription'; //'http://localhost:3001';\n        return this.http\n            .post(url, body);\n    }\n}\n","<div class=\"card\">\n  <div class=\"card-header\">\n    Subscribe here to read new Jokes, when they arrive\n  </div>\n  <div class=\"row\">&nbsp;</div>\n  <div class=\"row\">\n    <div class=\"col-md-2\"></div>\n    <div class=\"col-md-8\">\n      <form  #subscriptionForm=\"ngForm\">\n        <div class=\"form-group\">\n          <label for=\"emailId\">Email address</label>\n          <input type=\"email\" class=\"form-control\" id=\"emailId\" #emailId=\"ngModel\"  [(ngModel)]=\"model.user_email\" name=\"emailId\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" required>\n          <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n          <div *ngIf=\"emailId.invalid && (emailId.dirty || emailId.touched)\"\n               class=\"alert alert-danger\">\n            Email is required\n          </div>\n        </div>\n\n        <div *ngIf=\"postSuccess === true\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n          Thank you for Subscribing.\n          <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div *ngIf=\"postSuccess=== false\" class=\"alert alert-error alert-dismissible fade show\" role=\"alert\">\n          Oops some error occurred. please try again!.\n          <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n\n        <button (click)=\"onPostSubscription()\" type=\"button\" [disabled]='subscriptionForm.invalid && submitted=== false' class=\"btn btn-primary\">Submit</button>\n      </form>\n    </div>\n  </div>\n  <div class=\"row\">&nbsp;</div>\n</div>\n","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport { Component } from '@angular/core';\nimport {SubscriptionDataService} from './subscription-data.service';\nimport {PostSubscription} from './subscription.model';\n\n\n@Component({\n    selector: 'subscription',\n    templateUrl: './subscription.component.html',\n    providers: [SubscriptionDataService]\n})\n\nexport class SubscriptionComponent {\n    model = new PostSubscription('');\n    submitted: any = undefined;\n    postSuccess: any = undefined;\n    constructor(\n        private subscriptionDataService: SubscriptionDataService\n    ){}\n\n    onPostSubscription(){\n        this.submitted = false;\n        this.subscriptionDataService.postSubscription(this.model)\n            .subscribe((p : any) => {\n                this.submitted= true\n                if(p.success){\n                    this.postSuccess = true;\n                }else{\n                    this.postSuccess = false;\n                }\n            });\n    }\n}\n","export class PostSubscription {\n    user_email: string;\n    constructor(\n        user_email: string\n    ){\n        this.user_email = user_email;\n    }\n}","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport {NgModule} from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {SubscriptionComponent} from './subscription.component';\nimport {SubscriptionDataService} from './subscription-data.service';\n\n@NgModule({\n    imports:[FormsModule, CommonModule],\n    declarations: [\n        SubscriptionComponent\n    ],\n    providers: [SubscriptionDataService]\n})\nexport class SubscriptionModule{}","import {Environment} from './environment.interface';\n\nexport const environment: Environment = {\n    kidsLaughsApi: 'https://kids-jokes-api.herokuapp.com',\n    production: true\n}","export { AppServerModule } from './app/app.server.module';\n","module.exports = require(\"@angular/animations\");","module.exports = require(\"@angular/animations/browser\");","module.exports = require(\"@angular/common\");","module.exports = require(\"@angular/common/http\");","module.exports = require(\"@angular/core\");","module.exports = require(\"@angular/forms\");","module.exports = require(\"@angular/http\");","module.exports = require(\"@angular/platform-browser\");","module.exports = require(\"@angular/platform-browser/animations\");","module.exports = require(\"@angular/platform-server\");","module.exports = require(\"@angular/router\");","module.exports = require(\"@nguniversal/common\");","module.exports = require(\"@nguniversal/module-map-ngfactory-loader\");"],"sourceRoot":""}
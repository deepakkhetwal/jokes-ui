{"version":3,"sources":["/Users/deepakkhetwal/jokes-ui/src/$_lazy_route_resource lazy","/Users/deepakkhetwal/jokes-ui/src/app/app.component.html","/Users/deepakkhetwal/jokes-ui/src/app/app.component.ts","/Users/deepakkhetwal/jokes-ui/src/app/app.module.ts","/Users/deepakkhetwal/jokes-ui/src/app/contact-us/contact-data.service.ts","/Users/deepakkhetwal/jokes-ui/src/app/contact-us/contact.component.html","/Users/deepakkhetwal/jokes-ui/src/app/contact-us/contact.component.ts","/Users/deepakkhetwal/jokes-ui/src/app/contact-us/contact.module.ts","/Users/deepakkhetwal/jokes-ui/src/app/jokes/jokes-list-data.service.ts","/Users/deepakkhetwal/jokes-ui/src/app/jokes/jokes-list.component.html","/Users/deepakkhetwal/jokes-ui/src/app/jokes/jokes-list.component.ts","/Users/deepakkhetwal/jokes-ui/src/app/jokes/jokes-list.module.ts","/Users/deepakkhetwal/jokes-ui/src/app/post-joke/post-joke-data.service.ts","/Users/deepakkhetwal/jokes-ui/src/app/post-joke/post-joke.component.html","/Users/deepakkhetwal/jokes-ui/src/app/post-joke/post-joke.component.ts","/Users/deepakkhetwal/jokes-ui/src/app/post-joke/post-joke.model.ts","/Users/deepakkhetwal/jokes-ui/src/app/post-joke/post-joke.module.ts","/Users/deepakkhetwal/jokes-ui/src/app/subscription/subscription-data.service.ts","/Users/deepakkhetwal/jokes-ui/src/app/subscription/subscription.component.html","/Users/deepakkhetwal/jokes-ui/src/app/subscription/subscription.component.ts","/Users/deepakkhetwal/jokes-ui/src/app/subscription/subscription.model.ts","/Users/deepakkhetwal/jokes-ui/src/app/subscription/subscription.module.ts","/Users/deepakkhetwal/jokes-ui/src/environments/environment.dev.ts","/Users/deepakkhetwal/jokes-ui/src/environments/environment.ts","/Users/deepakkhetwal/jokes-ui/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/deepakkhetwal/jokes-ui/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<ul class=\\\"nav\\\">\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/jokes\\\">KidsLaughs.com Home</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/post-joke\\\">Post a Joke</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/subscribe\\\">Subscribe</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/get-contact\\\">About us</a>\\n  </li>\\n\\n</ul>\\n\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/deepakkhetwal/jokes-ui/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Meta, Title } from '@angular/platform-browser';\n\n\n@Component({\n  selector: 'main-app',\n  templateUrl: './app.component.html'\n\n})\nexport class AppComponent {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/deepakkhetwal/jokes-ui/src/app/app.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport {JokesListModule} from './jokes/jokes-list.module';\nimport {JokesListComponent} from './jokes/jokes-list.component';\nimport {PostJokeComponent} from './post-joke/post-joke.component';\nimport {PostJokeModule} from './post-joke/post-joke.module';\nimport {ContactModule} from './contact-us/contact.module';\nimport {ContactComponent} from './contact-us/contact.component';\nimport {SubscriptionModule} from './subscription/subscription.module';\nimport {SubscriptionComponent} from './subscription/subscription.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {TransferHttpCacheModule} from '@nguniversal/common'\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    JokesListModule,\n    PostJokeModule,\n    ContactModule,\n    SubscriptionModule,\n    BrowserModule.withServerTransition({\n          appId: 'my-app-id'\n    }),\n    TransferHttpCacheModule,\n    RouterModule.forRoot([\n      { path: '', component: JokesListComponent, pathMatch: 'full'},\n      {path: 'jokes', component: JokesListComponent},\n      {path: 'post-joke', component: PostJokeComponent},\n      {path: 'get-contact', component: ContactComponent},\n      {path: 'subscribe', component: SubscriptionComponent}\n    ])\n  ],\n  declarations: [ AppComponent],\n  exports: [ AppComponent ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/deepakkhetwal/jokes-ui/src/app/app.module.ts","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport {Injectable} from '@angular/core';\n\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\n\n@Injectable()\nexport class ContactDataService{\n    constructor(private http: HttpClient){}\n    getContact() {\n        let url = environment.kidsLaughsApi + '/get-contact'; //'http://localhost:3001';\n        return this.http\n            .get(url);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/deepakkhetwal/jokes-ui/src/app/contact-us/contact-data.service.ts","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <h4 class=\\\"card-title\\\">About US</h4>\\n    <p class=\\\"card-text\\\">\\n          Email Id: {{contact.email}}\\n    </p>\\n    <a href=\\\"http://khetwalenterprises.com\\\" class=\\\"btn btn-primary\\\">khetwalenterprises.com</a>\\n  </div>\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/deepakkhetwal/jokes-ui/src/app/contact-us/contact.component.html\n// module id = ../../../../../src/app/contact-us/contact.component.html\n// module chunks = main","\nimport {ContactDataService} from './contact-data.service';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n    selector: 'contact',\n    templateUrl: './contact.component.html',\n    providers: [ContactDataService]\n})\n\nexport class ContactComponent implements OnInit{\n    contact: any;\n\n    constructor(\n        private contactDataService: ContactDataService\n    ){}\n    ngOnInit(): void{\n        this.contactDataService.getContact()\n            .subscribe(p => {\n                this.contact = p[0];\n\n            });\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/deepakkhetwal/jokes-ui/src/app/contact-us/contact.component.ts","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport {NgModule} from '@angular/core';\n\nimport {ContactComponent} from './contact.component';\nimport {ContactDataService} from './contact-data.service';\n\n@NgModule({\n    imports:[],\n    declarations: [\n        ContactComponent\n    ],\n    providers: [ContactDataService]\n})\nexport class ContactModule{}\n\n\n// WEBPACK FOOTER //\n// /Users/deepakkhetwal/jokes-ui/src/app/contact-us/contact.module.ts","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport {Injectable} from '@angular/core';\n\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\n\n@Injectable()\nexport class JokesListDataService{\n    constructor(private http: HttpClient){}\n    getJokesList() {\n        let url = environment.kidsLaughsApi; //'http://localhost:3001';\n        return this.http\n            .get(url);\n    }\n    postLike(body){\n        let url = environment.kidsLaughsApi + '/inc-likes-cnt';\n        return this.http\n            .post(url, body);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/deepakkhetwal/jokes-ui/src/app/jokes/jokes-list-data.service.ts","module.exports = \" <ul class=\\\"list-group\\\" *ngFor=\\\"let joke of jokes; let i=index\\\">\\n   <li class=\\\"list-group-item\\\">\\n     {{joke.description}}\\n         <br>\\n         <button *ngIf=\\\"liked[i]===false\\\" type=\\\"button\\\" class=\\\"btn btn-light\\\" aria-label=\\\"Left Align\\\" (click)=\\\"onPostLike(i)\\\">\\n         <i class=\\\"fa fa-bell-o fa-lg\\\"   aria-hidden=\\\"true\\\"></i> Like\\n         </button>\\n       <button *ngIf=\\\"liked[i]===true\\\" type=\\\"button\\\" class=\\\"btn btn-light\\\" aria-label=\\\"Left Align\\\">\\n         <i class=\\\"fa fa-bell fa-lg\\\"   aria-hidden=\\\"true\\\"></i> Like\\n       </button>\\n     {{joke.likes_count}} Likes\\n   </li>\\n </ul>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/deepakkhetwal/jokes-ui/src/app/jokes/jokes-list.component.html\n// module id = ../../../../../src/app/jokes/jokes-list.component.html\n// module chunks = main","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport { Component, OnInit } from '@angular/core';\nimport {JokesListDataService} from './jokes-list-data.service';\n\n\n@Component({\n    selector: 'jokes-list',\n    templateUrl: './jokes-list.component.html',\n    providers: [JokesListDataService]\n})\n\nexport class JokesListComponent implements OnInit{\n    jokes: any;\n    liked: Boolean[] = [];\n    constructor(\n        private jokesListDataService: JokesListDataService\n    ){}\n    ngOnInit(): void{\n        this.jokesListDataService.getJokesList()\n            .subscribe(p => {\n                this.jokes = p;\n                for(let i=0; i< this.jokes.length; i++){\n                    this.liked[i] = false;\n                }\n            });\n    }\n    onPostLike(index){\n        this.jokes[index].likes_count = this.jokes[index].likes_count +1;\n        this.liked[index] = true;\n        const _id = this.jokes[index]._id;\n        this.jokesListDataService.postLike({_id: _id})\n            .subscribe();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/deepakkhetwal/jokes-ui/src/app/jokes/jokes-list.component.ts","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {JokesListComponent} from './jokes-list.component';\nimport {JokesListDataService} from './jokes-list-data.service';\n\n@NgModule({\n    imports:[CommonModule],\n    declarations: [\n        JokesListComponent\n    ],\n    providers: [JokesListDataService]\n})\nexport class JokesListModule{}\n\n\n// WEBPACK FOOTER //\n// /Users/deepakkhetwal/jokes-ui/src/app/jokes/jokes-list.module.ts","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\n\n@Injectable()\nexport class PostJokeDataService{\n    constructor(private http: HttpClient){}\n    postJoke(body) {\n        let url = environment.kidsLaughsApi + '/post-joke'; //'http://localhost:3001';\n        return this.http\n            .post(url, body);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/deepakkhetwal/jokes-ui/src/app/post-joke/post-joke-data.service.ts","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    Please post a Joke here for kids\\n  </div>\\n  <div class=\\\"row\\\">&nbsp;</div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-2\\\"></div>\\n    <div class=\\\"col-md-8\\\">\\n      <form  #postJokeForm=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"emailId\\\">Email address</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"emailId\\\" #emailId=\\\"ngModel\\\"  [(ngModel)]=\\\"model.user_email\\\" name=\\\"emailId\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\" required>\\n          <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>\\n          <div *ngIf=\\\"emailId.invalid && (emailId.dirty || emailId.touched)\\\"\\n               class=\\\"alert alert-danger\\\">\\n            Email is required\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"description\\\">Enter a Joke</label>\\n          <textarea rows=\\\"10\\\" cols=\\\"5\\\" class=\\\"form-control\\\" id=\\\"description\\\" #description=\\\"ngModel\\\" [(ngModel)]=\\\"model.description\\\" name=\\\"description\\\" required></textarea>\\n          <div *ngIf=\\\"description.invalid && (description.dirty || description.touched)\\\"\\n               class=\\\"alert alert-danger\\\">\\n            Joke text is required\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"postSuccess === true\\\" class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\\n          Thank you for posting your Joke.\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div *ngIf=\\\"postSuccess=== false\\\" class=\\\"alert alert-error alert-dismissible fade show\\\" role=\\\"alert\\\">\\n          Oops some error occurred. please try again!.\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          Please note: Your joke will be posted after being reviewed\\n        </div>\\n        <button (click)=\\\"onPostJoke()\\\" type=\\\"button\\\" [disabled]='postJokeForm.invalid && submitted=== false' class=\\\"btn btn-primary\\\">Submit</button>\\n      </form>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">&nbsp;</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/deepakkhetwal/jokes-ui/src/app/post-joke/post-joke.component.html\n// module id = ../../../../../src/app/post-joke/post-joke.component.html\n// module chunks = main","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport { Component } from '@angular/core';\nimport {PostJokeDataService} from './post-joke-data.service';\nimport {PostJoke} from './post-joke.model';\nimport {isNullOrUndefined} from 'util';\n\n@Component({\n    selector: 'post-joke',\n    templateUrl: './post-joke.component.html',\n    providers: [PostJokeDataService]\n})\n\nexport class PostJokeComponent {\n    jokes: any;\n    model = new PostJoke('','');\n    submitted: any = undefined;\n    postSuccess: any = undefined;\n    constructor(\n        private postJokeDataService: PostJokeDataService\n    ){}\n\n    onPostJoke(){\n        this.submitted = false;\n        this.postJokeDataService.postJoke(this.model)\n            .subscribe((p : any) => {\n                this.submitted= true\n                if(p.success){\n                    this.postSuccess = true;\n                }else{\n                    this.postSuccess = false;\n                }\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/deepakkhetwal/jokes-ui/src/app/post-joke/post-joke.component.ts","export class PostJoke {\n    description: string;\n    user_email: string;\n    constructor(\n        description: string,\n        user_email: string\n    ){\n        this.description = description;\n        this.user_email = user_email;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/deepakkhetwal/jokes-ui/src/app/post-joke/post-joke.model.ts","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport {NgModule} from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {PostJokeComponent} from './post-joke.component';\nimport {PostJokeDataService} from './post-joke-data.service';\n\n@NgModule({\n    imports:[FormsModule, CommonModule],\n    declarations: [\n        PostJokeComponent\n    ],\n    providers: [PostJokeDataService]\n})\nexport class PostJokeModule{}\n\n\n// WEBPACK FOOTER //\n// /Users/deepakkhetwal/jokes-ui/src/app/post-joke/post-joke.module.ts","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\n\n@Injectable()\nexport class SubscriptionDataService{\n    constructor(private http: HttpClient){}\n    postSubscription(body) {\n        let url = environment.kidsLaughsApi + '/post-subscription'; //'http://localhost:3001';\n        return this.http\n            .post(url, body);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/deepakkhetwal/jokes-ui/src/app/subscription/subscription-data.service.ts","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    Subscribe here to read new Jokes, when they arrive\\n  </div>\\n  <div class=\\\"row\\\">&nbsp;</div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-2\\\"></div>\\n    <div class=\\\"col-md-8\\\">\\n      <form  #subscriptionForm=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"emailId\\\">Email address</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"emailId\\\" #emailId=\\\"ngModel\\\"  [(ngModel)]=\\\"model.user_email\\\" name=\\\"emailId\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\" required>\\n          <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>\\n          <div *ngIf=\\\"emailId.invalid && (emailId.dirty || emailId.touched)\\\"\\n               class=\\\"alert alert-danger\\\">\\n            Email is required\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"postSuccess === true\\\" class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\\n          Thank you for Subscribing.\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div *ngIf=\\\"postSuccess=== false\\\" class=\\\"alert alert-error alert-dismissible fade show\\\" role=\\\"alert\\\">\\n          Oops some error occurred. please try again!.\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n\\n        <button (click)=\\\"onPostSubscription()\\\" type=\\\"button\\\" [disabled]='subscriptionForm.invalid && submitted=== false' class=\\\"btn btn-primary\\\">Submit</button>\\n      </form>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">&nbsp;</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/deepakkhetwal/jokes-ui/src/app/subscription/subscription.component.html\n// module id = ../../../../../src/app/subscription/subscription.component.html\n// module chunks = main","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport { Component } from '@angular/core';\nimport {SubscriptionDataService} from './subscription-data.service';\nimport {PostSubscription} from './subscription.model';\n\n\n@Component({\n    selector: 'subscription',\n    templateUrl: './subscription.component.html',\n    providers: [SubscriptionDataService]\n})\n\nexport class SubscriptionComponent {\n    model = new PostSubscription('');\n    submitted: any = undefined;\n    postSuccess: any = undefined;\n    constructor(\n        private subscriptionDataService: SubscriptionDataService\n    ){}\n\n    onPostSubscription(){\n        this.submitted = false;\n        this.subscriptionDataService.postSubscription(this.model)\n            .subscribe((p : any) => {\n                this.submitted= true\n                if(p.success){\n                    this.postSuccess = true;\n                }else{\n                    this.postSuccess = false;\n                }\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/deepakkhetwal/jokes-ui/src/app/subscription/subscription.component.ts","export class PostSubscription {\n    user_email: string;\n    constructor(\n        user_email: string\n    ){\n        this.user_email = user_email;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/deepakkhetwal/jokes-ui/src/app/subscription/subscription.model.ts","/**\n * Created by deepakkhetwal on 8/21/17.\n */\nimport {NgModule} from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {SubscriptionComponent} from './subscription.component';\nimport {SubscriptionDataService} from './subscription-data.service';\n\n@NgModule({\n    imports:[FormsModule, CommonModule],\n    declarations: [\n        SubscriptionComponent\n    ],\n    providers: [SubscriptionDataService]\n})\nexport class SubscriptionModule{}\n\n\n// WEBPACK FOOTER //\n// /Users/deepakkhetwal/jokes-ui/src/app/subscription/subscription.module.ts","import {Environment} from './environment.interface';\n\nexport const environment: Environment = {\n    kidsLaughsApi: 'https://kids-jokes-api.herokuapp.com',\n    production: false\n}\n\n\n// WEBPACK FOOTER //\n// /Users/deepakkhetwal/jokes-ui/src/environments/environment.dev.ts","export {environment} from './environment.dev';\n\n\n// WEBPACK FOOTER //\n// /Users/deepakkhetwal/jokes-ui/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule);\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/deepakkhetwal/jokes-ui/src/main.ts"],"sourceRoot":"webpack:///"}